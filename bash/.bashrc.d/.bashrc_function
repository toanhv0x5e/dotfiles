# Functions

# Create archive
compress () {
    if [ -n "$1" ] ; then
        FILE=$1
        case $FILE in
        *.tar)      shift && tar cf $FILE $* ;;
        *.tar.bz2)  shift && tar cjf $FILE $* ;;
        *.tar.gz)   shift && tar czf $FILE $* ;;
        *.tgz)      shift && tar czf $FILE $* ;;
        *.zip)      shift && zip $FILE $* ;;
        *.rar)      shift && rar $FILE $* ;;
        esac
    else
        echo "usage: compress <archive.tar.gz> <archive> <files>"
    fi
}

# Unpack archive
unpack() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)  tar xjf $1    ;;
            *.tbz2)     tar xjf $1    ;;
            *.tar.gz)   tar xzf $1    ;;
            *.tgz)      tar xzf $1    ;;
            *.bz2)      bunzip2 $1    ;;
            *.rar)      unrar x $1    ;;
            *.gz)       gunzip $1     ;;
            *.tar)      tar xf $1     ;;
            *.zip)      unzip $1      ;;
            *.Z)        uncompress $1 ;;
            *.7z)       7z x $1       ;;
            *) echo -e ${YELLOW}"'$1' cannot be unpacked"${RESET} ;;
        esac
    else
        echo -e ${YELLOW}"'$1' is an invalid file"${RESET}
    fi
}

# Generate random password
genpass() {
        local l=$1
        [ "$l" == "" ] && l=16
        tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs
}

#upload to bB
imageup() {
	curl https://upload.php -X POST -F "ImageUp=@$1"
	}


# Proxy configuration
proxy_on() {
    export no_proxy="localhost, 127.0.0.1"
    #export GIT_PROXY_COMMAND=~/bin/git-proxy-wrapper
    if (( $# > 0 )); then
        #valid=$(echo $@ | sed -n 's/\([0-9]\{1,3\}.\)\{4\}:\([0-9]\+\)/&/p')
        #if [[ $valid != $@ ]]; then
        #    >&2 echo "Invalid address"
        #    return 1
        #fi

        export http_proxy="http://${1}:${2}/"
        export https_proxy=$http_proxy
        export ftp_proxy=$http_proxy
        export rsync_proxy=$http_proxy
        #export all_proxy="socks5://127.0.0.1:8080"
        export HTTP_PROXY=$http_proxy
        export HTTPS_PROXY=$http_proxy
        export FTP_PROXY=$http_proxy
        export RSYNC_PROXY=$http_proxy
        #export ALL_PROXY="socks5://127.0.0.1:8080"

#         cat > ~/.ssh/config << EOF
# Host .fpt.vn,.fpt.com.vn,.fpt.net,.officesg.local 
#     ProxyCommand none

# Host github.com
#     HostName github.com
#     ProxyCommand proxytunnel -v -p ${1}:${2} -r 128.199.64.57:443 -d %h:%p -H "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)"
#     ServerAliveInterval 30
#     User git

# Host *.labs.overthewire.org
#   SendEnv WECHALLTOKEN
#   SendEnv WECHALLUSER

# Host *
#     DynamicForward 1080
#     ProxyCommand proxytunnel -v -p ${1}:${2} -r 128.199.64.57:443 -d %h:%p -H "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Win32)"
#     ServerAliveInterval 30

# EOF
#         cat > ~/.gitconfig << EOF
# [credential]
#     helper = cache --timeout=32768
# [user]
#     name = h4rdw0rk
#     email = hatoan.vniss@gmail.com
    
# [core]
#     gitproxy=~/bin/git-proxy-wrapper
#     gitproxy=default-proxy ; for all the rest

# [http]
#     proxy = proxy.hcm.fpt.vn:80
#     sslVerify = false

# [url "https://"]
#     insteadOf = git://

# EOF
        #alias git="git -c \"http.proxy=${1}:${2}\""
        #alias ssh="ssh -v -L 8080:localhost:80"

        echo "Proxy environment variable set."
        return 0
    fi

    # echo -n "username: "; read username
    # if [[ $username != "" ]]; then
    #     echo -n "password: "
    #     read -es password
    #     local pre="$username:$password@"
    # fi

    echo -n "server: "; read server
    echo -n "port: "; read port
    export http_proxy="http://$pre$server:$port/"
    export https_proxy=$http_proxy
    export ftp_proxy=$http_proxy
    export rsync_proxy=$http_proxy
    export HTTP_PROXY=$http_proxy
    export HTTPS_PROXY=$http_proxy
    export FTP_PROXY=$http_proxy
    export RSYNC_PROXY=$http_proxy
}

proxy_off(){
    unset http_proxy 2> /dev/null
    unset https_proxy 2> /dev/null
    unset ftp_proxy 2> /dev/null
    unset rsync_proxy 2> /dev/null
    unset all_proxy 2> /dev/null
    unset HTTP_PROXY 2> /dev/null
    unset HTTPS_PROXY 2> /dev/null
    unset FTP_PROXY 2> /dev/null
    unset RSYNC_PROXY 2> /dev/null
    unset ALL_PROXY 2> /dev/null
    unset GIT_PROXY_COMMAND

    cat > ~/.ssh/config << EOF
Host *.labs.overthewire.org
  SendEnv ${WECHALLTOKEN}
  SendEnv ${WECHALLUSER}

Host *
  ProxyCommand none
  ServerAliveInterval 5
EOF

    cat > ~/.gitconfig << EOF
[credential]
    helper = cache --timeout=0
[user]
    name = h4rdw0rk
    email = hatoan.vniss@gmail.com

EOF

    # unalias git 2> /dev/null
    # unalias ssh 2> /dev/null
    echo -e "Proxy environment variable removed."
}

next_hue() {
    color=$(( 30 + (++color % 8) ))
    echo -ne "\e[1;${color}m"    # change 1 to 0 for darker colors
}

ssh(){
  # try to connect every 0.5 secs (modulo timeouts)
  while true; do command ssh -q "$@"; [ $? -ne 255 ] && break || sleep 0.5; done
}
